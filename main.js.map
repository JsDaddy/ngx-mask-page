{"version":3,"sources":["./src/app/main/get-started-page/get-started-page.component.ts","./src/app/main/get-started-page/get-started-page.component.html","./src/environments/environment.ts","./src/assets/content/optional.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/main/main.module.ts","./src/app/app.module.ts","./src/$_lazy_route_resource lazy namespace object","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/assets/content/separators.ts","./src/assets/content/lists.ts","./src/app/main/doc/options/options.component.ts","./src/app/main/doc/options/options.component.html","./src/app/main/main-page/main-page.component.ts","./src/app/main/main-page/main-page.component.html","./src/assets/content/other.ts","./src/assets/content/commonCases.ts","./src/app/app-routing.module.ts","./src/app/material.module.ts","./src/app/main/doc/mask-component/mask.component.ts","./src/app/main/doc/mask-component/mask.component.html","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n// tslint:disable-next-line:interface-name\nexport interface TableElement {\n  position: number;\n  mask: string;\n  example: string;\n}\n// const ELEMENT_DATA: TableElement[] = [\n//   {\n//     position: 1,\n//     mask: '9999-99-99',\n//     example: '2017-04-15',\n//   },\n//   {\n//     position: 2,\n//     mask: '0*.00',\n//     example: '2017.22',\n//   },\n//   {\n//     position: 3,\n//     mask: '000.000.000-99',\n//     example: '048.457.987-98',\n//   },\n//   {\n//     position: 4,\n//     mask: 'AAAA',\n//     example: '0F6g',\n//   },\n//   {\n//     position: 5,\n//     mask: 'SSSS',\n//     example: 'asDF',\n//   }\n// ];\nconst codePattern: TableElement[] = [\n  {\n    position: 1,\n    mask: '0',\n    example: 'digits (like 0 to 9 numbers)',\n  },\n  {\n    position: 2,\n    mask: '9',\n    example: 'digits (like 0 to 9 numbers), but optional',\n  },\n  {\n    position: 3,\n    mask: 'A',\n    example: 'letters (uppercase or lowercase) and digits',\n  },\n  {\n    position: 4,\n    mask: 'S',\n    example: 'only letters (uppercase or lowercase)',\n  }\n];\n\n@Component({\n  selector: 'app-get-started-page',\n  templateUrl: './get-started-page.component.html',\n  styleUrls: ['./get-started-page.component.scss']\n})\n\nexport class GetStartedPageComponent implements OnInit {\n\n   public displayedColumns: string[] = ['mask', 'example'];\n  //  public dataSource: TableElement[] = ELEMENT_DATA;\n   public dataCode:  TableElement[] = codePattern;\n   public displayCol: string [] = ['code' , 'meaning'];\n     // tslint:disable-next-line:no-any\n    public quickStart: any [] = [\n      {\n          header: 'Installing',\n          code: `npm install --save ngx-mask`\n      },\n      {\n        header: 'Quickstart',\n        text: 'Import ngx-mask module in Angular app.',\n        code: `import {NgxMaskModule} from 'ngx-mask'\n\n        (...)\n        @NgModule({\n          (...)\n          imports: [\n            NgxMaskModule.forRoot(options)\n          ]\n          (...)\n        })`\n      },\n      {\n        text: 'Then, just define masks in inputs.'\n      },\n      {\n        header: 'Usage',\n        code: `<input type='text' mask='{here comes your mask}' >`\n      },\n      {\n        text: 'Also you can use mask pipe'\n      },\n      {\n        header: 'Usage',\n        code: `<span>{{phone | mask: '(000) 000-0000'}}</span>`\n      },\n      {\n        header: 'Default patterns'\n      },\n    ];\n\n    public constructor(\n      private _iconRegistry: MatIconRegistry,\n      private _sanitizer: DomSanitizer) {}\n    public ngOnInit(): void {\n      this._iconRegistry.addSvgIcon(\n        'chevron-right-solid',\n        this._sanitizer.bypassSecurityTrustResourceUrl('../../../assets/img/chevron-right-solid.svg'));\n      }\n}\n","<div class=\"install\">\n    <div class=\"instal-wrapper\">\n        <p class=\".mat-subheading-1\">For existing apps, follow these steps to begin using Angular Mask Plugin.</p>\n        <div class=\"\" *ngFor=\"let quick of quickStart\">\n            <h2 class=\"mat-h1\">{{quick.header}}</h2>\n            <p class=\".mat-subheading-1\">{{quick.text}}</p>\n            <div *ngIf=\"quick.code\">\n                <pre><code [highlight]=\"quick.code\"></code></pre>\n            </div>\n        </div>\n        <div class=\"tables\"> \n            <div class=\"table-wrapper\">\n            \n            <!-- <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z6\">\n                <ng-container matColumnDef=\"mask\" sticky>\n                    <th mat-header-cell *matHeaderCellDef>mask</th>\n                    <td mat-cell *matCellDef=\"let element\"\n                        [style.background-color]=\"element.position % 2 == 0 ? 'whitesmoke':'white'\">\n                        {{element.mask}}</td>\n                </ng-container>\n                <ng-container matColumnDef=\"example\" stickyEnd>\n                    <th mat-header-cell *matHeaderCellDef>example</th>\n                    <td mat-cell *matCellDef=\"let element\"\n                        [style.background-color]=\"element.position % 2 == 0 ? 'whitesmoke':'white'\">{{element.example}}\n                    </td>\n                </ng-container>\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n            </table> -->\n\n            <table mat-table [dataSource]=\"dataCode\" class=\"mat-elevation-z6\">\n               \n                <ng-container matColumnDef=\"code\" sticky>\n                    <th mat-header-cell *matHeaderCellDef>code</th>\n                    <td mat-cell *matCellDef=\"let element\"\n                        [style.background-color]=\"element.position % 2 == 0 ? 'whitesmoke':'white'\">\n                        {{element.mask}}</td>\n                </ng-container>\n                <ng-container matColumnDef=\"meaning\" stickyEnd>\n                    <th mat-header-cell *matHeaderCellDef>meaning</th>\n                    <td mat-cell *matCellDef=\"let element\"\n                        [style.background-color]=\"element.position % 2 == 0 ? 'whitesmoke':'white'\">{{element.example}}\n                    </td>\n                </ng-container>\n                <tr mat-header-row *matHeaderRowDef=\"displayCol\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayCol;\"></tr>\n            </table>\n        </div>\n</div>   </div>\n<div class=\"button-wrapper\">\n        <a mat-raised-button [routerLink]=\"['/mask-component']\" class=\"next\">\n            \n            Next<mat-icon svgIcon=\"chevron-right-solid\"></mat-icon>  </a>\n </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { FormControl } from '@angular/forms';\n\n// tslint:disable-next-line: no-any\nexport const OptDocs: any[] = [\n    {\n        header: 'Prefix (string)',\n        text: 'You can add prefix to you masked value',\n        code: `<input type='text' prefix=\"+7 \" mask=\"(000) 000 00 00\" >`,\n        id: '1',\n        anchor: 'prefix'\n    },\n    {\n        header: 'Suffix (string)',\n        text: 'You can add suffix to you masked value',\n        code: `<input type='text' suffix=\" $\" mask=\"0000\" >`,\n        id: '2',\n        anchor: 'suffix'\n    },\n    {\n        header: 'dropSpecialCharacters (boolean)',\n        text: 'You can choose if mask will drop special character in the model, or not, default value true',\n        code: `<input type='text' [dropSpecialCharacters]=\"false\" mask=\"000-000.00\" >`,\n        id: '3',\n        anchor: 'special-ch'\n    },\n    {\n        header: 'showMaskTyped (boolean)',\n        text: 'You can choose if mask is shown while typing, or not, default value false',\n        code: ` <input mask=\"(000) 000-0000\" prefix=\"+7\" [showMaskTyped] = \"true\">`,\n        id: '4',\n        anchor: 'show-mask'\n    },\n    {\n        header: 'clearIfNotMatch (boolean)',\n        text: 'You can choose clear the input if the input value not match the mask, default value false',\n        code: `<input type='text' [clearIfNotMatch]=\"true\" mask=\"000-000.00\" >`,\n        id: '5',\n        anchor: 'clear'\n    },\n    {\n        header: 'FormControl validation',\n        text: 'You can validate your formControl, default value is true',\n        code: ` <input type='text' mask=\"00 00\" [validation]=\"true\">`,\n        id: '6',\n        anchor: 'valid'\n    }\n];\n\n\n// tslint:disable-next-line: no-any\nexport const OptExamples: any[] = [\n    {\n        _placeholder: 'prefix',\n        _prefix: '+75',\n        _mask: '(00) 000 000',\n        control: { form: new FormControl(''), model: '' }\n    },\n    {\n        _placeholder: 'suffix',\n        _suffix: ' $',\n        _mask: '0 000',\n        control: { form: new FormControl(''), model: '' }\n    },\n    {\n        _placeholder: 'dropSpecialCharacters',\n        _dropSpecialCharacters: false,\n        _mask: '000-000.00',\n        control: { form: new FormControl(''), model: '' }\n    },\n    {\n        _placeholder: 'showMaskTyped',\n        _showMaskTyped: true,\n        _mask: '(000) 000-0000',\n        control: { form: new FormControl(''), model: '' }\n    },\n    {\n        _placeholder: 'clearIfNotMatch',\n        _clearIfNotMatch: true,\n        _mask: '000-000.00',\n        control: { form: new FormControl(''), model: '' }\n    },\n    {\n        _placeholder: 'validation',\n        _validation: true,\n        _mask: '000-000.00',\n        control: { form: new FormControl(''), model: '' }\n    },\n];","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  title = 'ngx-mask-page';\n}\n","<app-header></app-header>\n<router-outlet></router-outlet>\n","import { OptionsComponent } from './doc/options/options.component';\nimport { NgModule } from '@angular/core';\nimport { MainPageComponent } from './main-page/main-page.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MaterialModule } from '../material.module';\nimport { HighlightModule, HIGHLIGHT_OPTIONS } from 'ngx-highlightjs';\nimport { NgxMaskModule } from 'ngx-mask';\nimport { MaskComponent } from './doc/mask-component/mask.component';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { GetStartedPageComponent } from './get-started-page/get-started-page.component';\nimport { HttpClientModule } from '@angular/common/http';\n\nconst routes: Routes = [\n  {path: 'main', component: MaskComponent},\n  {path: 'mask-component', component: MaskComponent},\n  {path: 'getting-start', component: GetStartedPageComponent}\n];\n\n@NgModule({\n  declarations: [MainPageComponent, GetStartedPageComponent, MaskComponent, OptionsComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    MaterialModule,\n    HighlightModule,\n    NgxMaskModule.forRoot(),\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [\n    {\n      provide: HIGHLIGHT_OPTIONS,\n      useValue: {\n        fullLibraryLoader: () => import('highlight.js'),\n      }\n    }\n  ],\n})\nexport class MainModule {\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MaterialModule } from './material.module';\nimport { MainModule } from './main/main.module';\nimport { HeaderComponent } from './header/header.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    MainModule,\n    CommonModule\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"crnd\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent  {\n}\n","<mat-toolbar class=\" header mat-elevation-z6\">\n  <mat-toolbar-row>\n        <span class=\"logo align-middle\">\n            <a [routerLink]=\"['/main']\">\n                <img src=\"assets/img/logo.png\" alt=\"jsdaddy\" class=\"logo\"></a>\n        </span>\n  </mat-toolbar-row>\n  <mat-toolbar-row>\n        <span>\n            <a mat-button [routerLink]=\"['/mask-component']\">Ngx-mask</a>\n        </span>\n  </mat-toolbar-row>\n  <mat-toolbar-row>\n        <span>\n            <a mat-button target=\"_blank\" href=\"https://jsdaddy.github.io/ngx-copypaste/\">Ngx-copypaste </a>\n        </span>\n  </mat-toolbar-row>\n  <mat-toolbar-row>\n        <span>\n            <a mat-button class=\"loader\" target=\"_blank\" href=\"https://jsdaddy.github.io/ngx-loader-indicator/\"> Ngx-loader-indicator </a>\n        </span>\n  </mat-toolbar-row>\n  <mat-toolbar-row>\n        <span>\n            <a mat-button class=\"git\" target=\"_blank\" href=\"https://github.com/JsDaddy/ngx-mask\"> GitHub </a>\n        </span>\n  </mat-toolbar-row>\n</mat-toolbar>\n","import { FormControl } from '@angular/forms';\n\n// tslint:disable-next-line: no-any\nexport const SepDocs: any[] = [\n    {\n        header: 'Thousand separator',\n        text: 'You can devide your input by thousands',\n        code: `<input type='text' mask=\"separator\">`,\n        id: '1',\n        anchor: 'sep'\n    },\n    {\n        header: 'Dot separator',\n        text: 'For separate input with dots',\n        code: `<input type='text' mask=\"separator\" thousandSeparator=\".\"/>`,\n        id: '2',\n        anchor: 'Dsep'\n\n    },\n    {\n        header: 'Dot separator',\n        text: `For limiting decimal precision add ',' and the precision you want to limit too on the input. 2 is useful for currency. 0 will prevent decimals completely.`,\n        code: `<input type='text' mask=\"separator.2\" thousandSeparator=\".\"/>`,\n        id: '2'\n    },\n    {\n        header: 'Dot separator',\n        text: 'without decimal part',\n        code: `<input type='text' mask=\"separator.0\" thousandSeparator=\".\"/>`,\n        id: '2'\n    },\n    {\n        header: 'Comma separator',\n        text: `For separate input with commas`,\n        code: `<input type='text' mask=\"separator\" thousandSeparator=\",\"/>`,\n        id: '3',\n        anchor: 'comma_sep'\n    },\n    {\n        header: 'Comma separator',\n        text: `For limiting decimal precision add '.' and the precision you want to limit too on the input. 2 is useful for currency. 0 will prevent decimals completely.`,\n        code: `<input type='text' mask=\"separator.2\" thousandSeparator=\",\"/>`,\n        id: '3'\n    },\n    {\n        header: 'Comma separator',\n        text: 'without decimal part',\n        code: `<input type='text' mask=\"separator.0\" thousandSeparator=\",\"/>`,\n        id: '3'\n    },\n];\n\n\n// tslint:disable-next-line: no-any\nexport const SepExamples: any[] = [\n    {\n        _placeholder: 'Separator',\n        _mask: 'separator',\n        control: { form: new FormControl(''), model: '' }\n    },\n    {\n        _placeholder: 'separator',\n        _mask: 'separator',\n        _thousandSeparator: '.',\n        control: { form: new FormControl(''), model: '' }\n    },\n    {\n        _placeholder: 'separator.2',\n        _mask: 'separator.2',\n        _thousandSeparator: '.',\n        control: { form: new FormControl(''), model: '' }\n    },\n    {\n        _placeholder: 'separator.0',\n        _mask: 'separator.0',\n        _thousandSeparator: '.',\n        control: { form: new FormControl(''), model: '' }\n    },\n    {\n        _placeholder: 'separator',\n        _mask: 'separator',\n        _thousandSeparator: ',',\n        control: { form: new FormControl(''), model: '' }\n    },\n    {\n        _placeholder: 'separator.2',\n        _clearIfNotMatch: true,\n        _mask: 'separator.2',\n        _thousandSeparator: ',',\n        control: { form: new FormControl(''), model: '' }\n    },\n    {\n        _placeholder: 'separator.0',\n        _mask: 'separator.0',\n        _thousandSeparator: ',',\n        control: { form: new FormControl(''), model: '' }\n    },\n];","// tslint:disable-next-line: no-any\nexport const lists: any[] = [\n    {\n        header: 'Common cases',\n        id: '1',\n        text: [\n            {\n                content: 'Date',\n                id: '1',\n                scrollTo: 'prefix'\n            },\n            {\n                content: 'Date and hour',\n                id: '2',\n                scrollTo: 'date'\n            },\n            {\n                content: 'Hour',\n                id: '3',\n                scrollTo: 'hour'\n            },\n            {\n                content: 'Valid 24 hour format',\n                id: '4',\n                scrollTo: 'valid24'\n            },\n            {\n                content: 'Mixed types',\n                id: '5',\n                scrollTo: 'mixed'\n            },\n            {\n                content: 'Valid date and month',\n                id: '6',\n                scrollTo: 'validdate'\n            },\n        ],\n    },\n    {\n        header: 'Options',\n        id: '2',\n        text: [\n            {\n                content: 'Prefix',\n                id: '1',\n                scrollTo: 'prefix'\n            },\n            {\n                content: 'Suffix',\n                id: '2',\n                scrollTo: 'suffix'\n            },\n            {\n                content: 'dropSpecialCharacters',\n                id: '3',\n                scrollTo: 'special-ch'\n            },\n            {\n                content: 'showMaskTyped',\n                id: '4',\n                scrollTo: 'show-mask'\n            },\n            {\n                content: 'clearIfNotMatch',\n                id: '5',\n                scrollTo: 'clear'\n            },\n            {\n                content: 'Validation',\n                id: '6',\n                scrollTo: 'valid'\n            },\n        ],\n    },\n    {\n        header: 'Separators',\n        id: '3',\n        text: [\n            {\n                content: 'Separator',\n                id: '1',\n                scrollTo: 'sep'\n            },\n            {\n                content: 'Dot separator',\n                id: '2',\n                scrollTo: 'Dsep'\n            },\n            {\n                content: 'Comma separator',\n                id: '3',\n                scrollTo: 'comma_sep',\n            }\n        ],\n    },\n    {\n        header: 'Other',\n        id: '4',\n        text: [\n            {\n                content: 'Secure input',\n                id: '1'\n            },\n            {\n                content: 'Pipe',\n                id: '2'\n            },\n            {\n                content: 'specialCharacters',\n                id: '3',\n            },\n        ],\n    },\n];","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-options',\n  templateUrl: './options.component.html',\n  styleUrls: ['./options.component.sass']\n})\nexport class OptionsComponent {\n  // tslint:disable\n  @Input('docs')\n  public docs!: any[];\n\n  @Input('examples')\n  public examples!: any[];\n\n  @Input('choose')\n  public choose!: string;\n\n  public phone: string = '123456789'\n  public customPatterns = { '0': { pattern: new RegExp('\\[a-zA-Z\\]') } };\n\n  public checkChoose(input: string, curr: string): boolean {\n    return input === curr;\n  }\n\n\n}\n","<section class=\"content\">\n  <div class=\"doc-container\">\n    <div class=\"doc\" *ngFor=\"let tile of docs\">\n      <mat-card id=\"{{ tile.anchor }}\">\n        <mat-card-header>\n          <mat-card-title\n            [ngStyle]=\"{\n              color: checkChoose(choose, tile.id) ? '#ffcc00' : 'black'\n            }\"\n            >{{ tile.header }}\n          </mat-card-title>\n        </mat-card-header>\n        <mat-card-content>\n          <p>{{ tile.text }}</p>\n          <p>Usage</p>\n          <pre><code [highlight]=\"tile.code\"></code></pre>\n        </mat-card-content>\n      </mat-card>\n    </div>\n  </div>\n\n  <div class=\"examples-container\">\n    <div class=\"examples-wrapper\">\n      <div class=\"example\" *ngFor=\"let ex of examples\">\n        <mat-card>\n          <mat-card-content *ngIf=\"!ex._pipe; else pipeView\">\n            <div class=\"input-wrap\">\n              <mat-form-field>\n                <input\n                  matInput\n                  placeholder=\"{{ ex._placeholder }}\"\n                  prefix=\"{{ ex._prefix }}\"\n                  suffix=\"{{ ex._suffix }}\"\n                  [dropSpecialCharacters]=\"ex._dropSpecialCharacters || ''\"\n                  mask=\"{{ ex._mask || '' }}\"\n                  thousandSeparator=\"{{ex._thousandSeparator||' '}}\"\n                  [formControl]=\"ex.control.form\"\n                  [(ngModel)]=\"ex.control.model\"\n                  [validation]=\"ex._validation || null\"\n                  [showMaskTyped]=\"ex._showMaskTyped || null\"\n                  [clearIfNotMatch]=\"ex._clearIfNotMatch || null\"\n                  [hiddenInput]=\"ex._hiddenInput\"\n                />\n              </mat-form-field>\n            </div>\n            <div *ngIf=\"!ex._validation; else validView\">\n              <div class=\"model-wrap\">\n                <div class=\"values\">\n                  <p>\n                    FormControl:\n                    {{\n                      ex.control.form.value ? ex.control.form.value : \"Empty\"\n                    }}\n                  </p>\n                  <p>\n                    NgModel: {{ ex.control.model ? ex.control.model : \"Empty\" }}\n                  </p>\n                </div>\n                <mat-hint>Mask: {{ ex._mask }}</mat-hint>\n              </div>\n            </div>\n            <ng-template #validView>\n              <div class=\"model-wrap\">\n                <div class=\"values\">\n                  <p>FormControl: {{ ex.control.form.errors | json }}</p>\n                </div>\n                <mat-hint>Mask: {{ ex._mask }}</mat-hint>\n              </div>\n            </ng-template>\n          </mat-card-content>\n        </mat-card>\n      </div>\n    </div>\n  </div>\n</section>\n\n<ng-template #pipeView>\n  <mat-card-content>\n    <p>{{ phone | mask: \"(000) 000-0000\" }}</p>\n    <p>Mask: (000) 000-0000</p>\n    <p>Value: 123456789</p>\n  </mat-card-content>\n</ng-template>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-main-page',\n  templateUrl: './main-page.component.html',\n  styleUrls: ['./main-page.component.scss']\n})\nexport class MainPageComponent { }\n","<div class=\"main\">\n  <div class=\"main-wrapper\">\n    <h1 class=\"mat-display-1\">Angular Mask Plugin</h1>\n    <p class=\"mat-subheading-1\">Angular Plugin to make masks on form fields and html elements.</p>\n    <a mat-raised-button [routerLink]=\"['/getting-start']\" class=\"get-started\"> Get Started </a>\n  </div>\n\n  <div class=\"meet-wrap\">\n    <div class=\"artcl-wrap-head\">\n      <div class=\"text-wrap\">\n        <p class=\"mat-display-1\">Lorem ipsum dolor sit amet consectetur adipisicing elit.\n          dicta quos!</p>\n      </div>\n    </div>\n    <mat-card>\n      <mat-card-content>\n        <div class=\"artcl-wrap-separ\">\n          <div class=\"text-wrap\">\n            <p class=\"mat-display-1\">Lorem ipsum dolor sit amet consectetur adipisicing elit.\n              dicta quos!</p>\n          </div>\n          <div class=\"img-wrap\">\n            <img src=\"assets/img/separator.png\">\n          </div>\n        </div>\n      </mat-card-content>\n    </mat-card>\n    <mat-card class=\"secure-wrap\">\n      <mat-card-content>\n        <div class=\"artcl-wrap-secure\">\n          <div class=\"img-wrap\">\n            <img src=\"assets/img/secure-input.png\">\n          </div>\n          <div class=\"text-wrap\">\n            <p class=\"mat-display-1\">Lorem ipsum dolor sit amet consectetur adipisicing elit.\n              dicta quos!</p>\n          </div>\n        </div>\n      </mat-card-content>\n    </mat-card>\n  </div>\n\n</div>","import { FormControl } from '@angular/forms';\n\n// tslint:disable-next-line: no-any\nexport const OthDocs: any[] = [\n    {\n        header: 'Secure input',\n        text: 'You can hide symbols in input field and get the actual value in formcontrol',\n        code: ` <input [hiddenInput]=\"true\" mask=\"XXX/X0/0000\">`,\n        id: '1'\n    },\n    {\n        header: 'Pipe',\n        text: 'Also you can use mask pipe',\n        code: ` <span>{{phone | mask: '(000) 000-0000'}}</span>`,\n        id: '2'\n    },\n    {\n        header: 'specialCharacters',\n        text: '',\n        code: ` <input type='text' [specialCharacters]=\"[ '[' ,']' , '\\\\' ]\" mask=\"[00]\\[000]\" >`,\n        id: '3'\n    },\n];\n\n\n// tslint:disable-next-line: no-any\nexport const OthExamples: any[] = [\n    {\n        _placeholder: 'Secure input',\n        _hiddenInput: true,\n        _mask: 'XXX/X0/0000',\n        control: { form: new FormControl(''), model: '' }\n    },\n    {\n        _pipe: '(000) 000-0000',\n    },\n    {\n        _placeholder: 'specialCharacters',\n        _specialCharacters: `[ '[' ,']' , '\\\\' ]`,\n        _mask: '[00]\\[000]',\n        control: { form: new FormControl(''), model: '' }\n    },\n];","import { FormControl } from '@angular/forms';\n\n// tslint:disable-next-line: no-any\nexport const ComDocs: any[] = [\n    {\n        header: 'Date',\n        text: '',\n        code: `<input matInput mask=\"00/00/0000\"/>`,\n        id: '1',\n        anchor: 'prefix'\n    },\n    {\n        header: 'Date and hour',\n        text: '',\n        code: `<input matInput mask=\"00/00/00 00:00:00\" />`,\n        id: '2',\n        anchor: 'date'\n    },\n    {\n        header: 'Hour',\n        text: '',\n        code: `<input matInput mask=\"00:00:00\" />`,\n        id: '3',\n        anchor: 'hour'\n    },\n    {\n        header: 'Valid 24 hour format',\n        text: '',\n        code: `<input matInput mask=\"Hh:m0:s0\" />`,\n        id: '4',\n        anchor: 'valid24'\n    },\n    {\n        header: 'Mixed types',\n        text: '',\n        code: `<input matInput mask=\"AAA 000-S0S\" />`,\n        id: '5',\n        anchor: 'mixed'\n    },\n    {\n        header: 'Valid date and month',\n        text: '',\n        code: `<input matInput mask=\"d0/M0/0000\" />`,\n        id: '6',\n        anchor: 'validdate'\n    }\n];\n\n\n// tslint:disable-next-line: no-any\nexport const ComExamples: any[] = [\n    {\n        _placeholder: 'Date',\n        _mask: '00/00/0000',\n        control: { form: new FormControl(''), model: '' }\n    },\n    {\n        _placeholder: 'Date and Hour',\n        _mask: '00/00/00 00:00:00',\n        control: { form: new FormControl(''), model: '' }\n    },\n    {\n        _placeholder: 'Hour',\n        _mask: '00:00:00',\n        control: { form: new FormControl(''), model: '' }\n    },\n    {\n        _placeholder: 'Valid 24 hour format',\n        _mask: 'Hh:m0:s0',\n        control: { form: new FormControl(''), model: '' }\n    },\n    {\n        _placeholder: 'Mixed Type',\n        _mask: 'AAA 000-S0S',\n        control: { form: new FormControl(''), model: '' }\n    },\n    {\n        _placeholder: 'Valid date and month',\n        _mask: 'd0/M0/0000',\n        control: { form: new FormControl(''), model: '' }\n    },\n];","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/main', pathMatch: 'full' },\n];\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatListModule } from '@angular/material/list';\nimport { MatExpansionModule } from '@angular/material/expansion';\n\n@NgModule({\n  imports: [\n    MatIconModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatGridListModule,\n    MatCardModule,\n    MatTabsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSidenavModule,\n    MatListModule,\n    MatExpansionModule,\n    MatCardModule,\n    MatTableModule\n  ],\n  exports: [\n    MatIconModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatGridListModule,\n    MatCardModule,\n    MatTabsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSidenavModule,\n    MatListModule,\n    MatExpansionModule,\n    MatCardModule,\n    MatTableModule\n  ]\n})\nexport class MaterialModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { OptDocs, OptExamples } from 'src/assets/content/optional';\nimport { lists } from 'src/assets/content/lists';\nimport { SepDocs, SepExamples } from 'src/assets/content/separators';\nimport { ComDocs, ComExamples } from 'src/assets/content/commonCases';\nimport { OthDocs, OthExamples } from 'src/assets/content/other';\n\n@Component({\n    selector: 'app-mask',\n    templateUrl: './mask.component.html',\n    styleUrls: ['./mask.component.scss']\n})\nexport class MaskComponent implements OnInit {\n\n    // tslint:disable-next-line: no-any\n    public inputVal: any;\n    public chosenItem!: string ;\n    public chosenList!: string;\n    // tslint:disable-next-line: no-any\n    public lists: any;\n\n    public switchDoc(idList: string): void {\n        switch (idList) {\n            case '1':\n                this.inputVal.docs = ComDocs;\n                this.inputVal.examples = ComExamples;\n                break;\n            case '2':\n                this.inputVal.docs = OptDocs;\n                this.inputVal.examples = OptExamples;\n                break;\n            case '3':\n                this.inputVal.docs = SepDocs;\n                this.inputVal.examples = SepExamples;\n                break;\n            case '4':\n                this.inputVal.docs = OthDocs;\n                this.inputVal.examples = OthExamples;\n                break;\n            default:\n                break;\n        }\n        this.chosenList = idList;\n    }\n\n    public handleClick(idItem: string, scrollTo: string): void {\n        this.chosenItem = idItem;\n        setTimeout(() => {\n             // tslint:disable-next-line:no-any\n                const anchor: any = document.getElementById(scrollTo);\n                if (anchor) {\n                    anchor.scrollIntoView({ behavior: 'smooth', block: 'end' });\n                }\n            });\n    }\n\n    public ngOnInit(): void {\n        this.inputVal = {\n            docs: ComDocs,\n            examples: ComExamples\n        };\n        this.chosenItem = '1';\n        this.chosenList = '1';\n        this.lists = lists;\n    }\n}\n","<section class=\"mask-wrap\">\n\n  <mat-drawer-container class=\"mat-elevation-z6\">\n    <mat-drawer-content>\n      <mat-accordion>\n        <mat-expansion-panel *ngFor=\"let list of lists\" [expanded]=\"list.id == 1\">\n          <mat-expansion-panel-header (click)=\"switchDoc(list.id)\">\n            <mat-panel-title [ngStyle]=\"{'color': list.id === chosenList ? '#ffcc00' : 'black'}\">{{list.header}}\n            </mat-panel-title>\n          </mat-expansion-panel-header>\n          <mat-nav-list *ngFor=\"let item of list.text\">\n            <button mat-button [ngStyle]=\"{'color': item.id === chosenItem ? '#ffcc00' : 'black'}\" class=\"date\"\n              id=\"{{item.id}}\" (click)=\"handleClick(item.id, item.scrollTo)\" [routerLink]\n              fragment=\"{{item.scrollTo}}\">{{item.content}}</button>\n          </mat-nav-list>\n        </mat-expansion-panel>\n      </mat-accordion>\n    </mat-drawer-content>\n\n  </mat-drawer-container>\n\n  <app-options [choose]=\"chosenItem\" [docs]=\"inputVal.docs\" [examples]=\"inputVal.examples\"></app-options>\n\n</section>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}